<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<title>Checkbox</title>
<link rel="StyleSheet" href="../../styles/site.css" type="text/css" />
<style type="text/css">.highlight { background: #FFFF40; }</style> 
<script type="text/javascript" src="../../highlight.js"></script></head>

<body onLoad="highlight();">
<table class="pagecontent" border="0" cellpadding="0" cellspacing="0" width="100%" bgcolor="#FFFFFF">
<tr>
<td valign="top" class="pagebody">
<h2>Checkbox</h2>

<p>The Checkbox element creates a checkbox. The value of the Checkbox can be assigned to a variable and modified dynamically at runtime by the user or by a user action. Similarly the label of the Checkbox can be modified dynamically. When it refers to a Finder table, the values can be sorted at runtime into True and False groupings via the Group By In Table property.</p>

<img src="exampleCheckbox.png" alt="Checkbox Element Example" border="1">

<h3>Summary</h3>
<table class='confluenceTable' border cellpadding=1>
<tbody>
<tr>
<th class='referenceTh'>references Variable</th>
<td class='referenceTd'>Yes</td>
</tr>
<tr>
<th class='referenceTh'>references Method</th>
<td class='referenceTd'>Yes, User Action Methods, Scripts and Permissions.</td>
</tr>
<tr>
<th class='referenceTh'>references Form</th>
<td class='referenceTd'>No</td>
</tr>
<tr>
<th class='referenceTh'>Allowable Child Elements</th>
<td class='referenceTd'><i>None</i></td>
</tr>
</tbody>
</table>

<h3>Properties</h3>
<table class='confluenceTable' border cellpadding=1>
<tbody>
<tr>
  <th width="100" class='referenceTh'>Property</th>
  <th width="145" class='referenceTh'><a href="Form Elements Overview.htm#mandatoryProperty">Mandatory</a>/Optional</th>
  <th width="1368" class='referenceTh'>Comment</th>
</tr>

<tr>
  <th class='referenceTh'>Name</th>
  <td class='referenceTd'>Mandatory</td>
  <td class='referenceTd'>Name of the Checkbox.</td>
</tr>
<tr>
  <th class='referenceTh'>Label</th>
  <td class='referenceTd'>Mandatory</td>
  <td class='referenceTd'>Visible label of the Checkbox. Default is empty which results in no label appearing.</td>
</tr>
<tr>
  <th class='referenceTh'>Allow Empty Value</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Checking this property provides three options (NULL, TRUE, FALSE) when the checkbox is clicked in runtime. By default, a checkbox is unchecked. The NULL value is displayed as a normal checkbox but with a solid square in it and it is saved in the database as a NULL value.<em></em></td>
</tr>
<tr>
  <th class='referenceTh'>Can Filter</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>This property is used when parented by a Table Element and refers to a Finder table column during runtime.  This will allow the user   to filter information in a table at runtime.</td>
</tr>
<tr>
  <th class='referenceTh'>Can Sort</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>This property is used when parented by a Table Element and refers to a Finder table column during runtime.  This will allow the user to sort the data by ascending or descending order at runtime. Setting this property to <em>False </em>will disable the sorting functionality. By default this functionality is set to <em>True.</em></td>
</tr>
<tr>
<th class='referenceTh'>*Cell Alignment</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>Controls the horizontal and vertical positioning of the checkbox in the page or parent element. Default is undefined, which behaves as if it is top-left.</td>
</tr>
<tr>
  <th class='referenceTh'>Cell Column Span</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Only applicable when in a Grid Layout. Specifies the number of columns that the Checkbox shall occupy in the Grid Layout, to the right of current cell. Default is empty, which occupy one column.</td>
</tr>
<tr>
  <th class='referenceTh'>Cell Row Span</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'><p>This property provides more flexibility when building a grid-based user interface, instead of using a combination of horizontal and vertical layouts. This property appears when form elements appear under a Grid Layout element and the form element has a parent element. This property specifies the number of rows that the element occupies in the grid layout.</p>
    <p>By default, this field is set to 1. All nine positions are made available for the <strong>Cell Alignment</strong> property if the form element is under a Grid Layout element and has a row span greater than 1, so that the form element can be aligned in nine different positions. With rowspan as 1, only the three centre positions are available.</p>
    <p>To use this property, see the <a href="Element - Button.html#cellRowSpanExample">example</a> for details.<BR>
    </p></td>
</tr>
<tr>
  <th class='referenceTh'>Dynamic Label</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Defines a label value that is set dynamically at runtime.  Set property to a <em>String</em> variable or a script that returns a <em>String</em>. The static Label property is considered as default until the action returns a value.</td>
</tr>
<tr>
<th class='referenceTh'>Dynamic Label Style</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>The value of this property is a method with a Return type <em>String</em>. In conjunction with the <strong>Variable</strong> property, this method will dynamically change the style of the label at runtime based on the instructions returned by the method.  The label style returned by the method must exist within the current css file that is being used by the application.</td>
</tr>
<tr>
<th class='referenceTh'>Dynamic Tooltip</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'><p>Defines a dynamic tooltip text that is displayed in a hover box when the cursor hovers the element.  Set property to a <em>String</em> variable or a script with a Return type <em>String</em>. The static Tooltip property is considered as default until the action returns a value.</p>
  <p>When this element is  used under the Table element, the <strong> Dynamic Tooltip</strong> property accepts a script, which is called for each result document value bound to a field with a dynamic tooltip set. This script returns the string desired to be shown on the hover. Additionally, the property accepts a variable value belonging to the result document. The value for this variable is then used to display the tooltip.<br>
  </p></td>
</tr>
<tr>
<th class='referenceTh'>Dynamic Tooltip Style</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>This property dynamically changes the style of the Dynamic Tooltip.  Set property to a script with a Return type <em>String</em> that is a cascading style sheet (css) name found in the stylesheet used by the application.</td>
</tr>
<tr>
  <th class='referenceTh'>Editable</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'><p>This property determines whether the checkbox is enable or disabled at runtime. The values for this property are either <em>True</em> (enabled), <em>False</em> (disabled) or a <em>Permissions</em> method (for example, depending on the user this field will be enabled or disabled).</p>
    <p><strong>Note:</strong> If a field contains  an editable permission that is either coming from the form field itself, or inherited  from the variable or data type, it takes precedence. Otherwise, the user  interface's editablePerm permission takes over. If this method is not  overwritten, the model's editablePerm permission is used. User interfaces  displayed under another user interface with editablePerm are also be inherited  if the embedded user interfaces do not have their own editablePerm permission. </p></td>
</tr>
<tr>
  <th class='referenceTh'>Error Icon Gap</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'><p>Select this property's checkbox to make a gap for the validation icon. By default, this property is false. </p>
    <p><strong>Note:</strong> This property is available only for left (or default) error orientation. The gap is calculated according to the /cwfv/error.png icon size. When the image is substituted with a smaller one, the gap is also smaller. </p></td>
</tr>
<tr>
  <th class='referenceTh'>Error Icon Orientation</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>This property allows you to configure how an icon are displayed. This property takes the values left (default) and right.</td>
</tr>
<tr>
  <th class='referenceTh'>Group By In Table</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>This property allows the user to group the Finder results in a table by the elements value. In the case of a checkbox, the results can be grouped by <em>True</em> and <em>False</em> values. </td>
</tr>
<tr>
<th class='referenceTh'>Height</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>Height to be taken up by the Checkbox area; can be an integer which is in pixels, or in percentage (for example, "50%") of page height or parent element. If this element is nested under a Table element, the width and height properties can be set using either the percentage (%)  or pixel (px) measurement. If this element is not nested under a Table element, the width and height properties are only available using the pixel setting.</td>
</tr>
<tr>
  <th class='referenceTh'>Icon</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Choose an image file that appears as an icon to the right of the Checkbox. Default is NONE.</td>
</tr>
<tr>
  <th class='referenceTh'>Include in Tab Order</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'><p>This property allows you to optionally suppress tabbing to any or all form elements. The <strong>Include in Tab Order</strong> property overrides the <a href="../../Configuration_Tool_User_Guide/Configure/System/UI/UItabbing.html">suppress tabbing</a> configuration setting and can take the following values:</p>
    <ul>
      <li>When set to <strong>&lt;Default&gt;</strong>, the element is included in tab order according to global rules and its focusable state.</li>
      <li>If the property is set to <strong>Exclude</strong>, the element is excluded from tabbing even if the element is focusable.</li>
      <li>If the property is set to <strong>Include</strong>, the element is included <em>only if it is focusable</em>, even if all items of that type are excluded through the Suppress Tabbing variable.</li>
      </ul>
    <p><strong>Note:</strong> For menu items and images, the <strong>Can Focus</strong> property affects including the element in the tab order. To ensure that an element is in the tabbing order, select this property.</p></td>
</tr>
<tr>
  <th class='referenceTh'>Label as Title</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'><p>This property's checkbox is selected by default, which indicates that the label is set as the checkbox field's title. For right label orientation, the order appears as follows:<BR>
      &lt;checkbox&gt;   &lt;icon&gt; &lt;label&gt; <BR>
      <BR>
      When you uncheck this property, the order is as follows::<BR>
      &lt;checkbox&gt; &lt;label&gt; &lt;icon&gt; <BR>
      <BR>
      By   default, the checkbox with icon only takes the label column, as the label column may be too big.<BR>
      <BR>
      To take both columns (that is, label and field),   set 
      <strong>Label Orientation</strong> for the checkbox element to <strong>right</strong> and set
      <strong>Cell Column Span</strong> to <strong>2</strong>. <BR>
      <BR>
      If you require displaying the checkbox with icon only at the field column,   set 
      <strong>Label Orientation</strong> for the checkbox element) to <strong>left</strong>, which leaves a gap   for the label column.</p>
    <p><strong>Note:</strong> By default, a checkbox element's label  is rendered as a separate label element, which may affect the  overall alignment of a grid layout where the label forces the column to take up  more room than it requires. To fix the alignment for certain layouts that have checkboxes  with label alignment as right/left, deselect the <strong>Label As Title</strong> property.</p></td>
</tr>
<tr>
  <th class='referenceTh'>Label Orientation</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Specifies where the label of the Checkbox appears in relation to the checkbox area; can be <i>left</i>, <i>right</i> or <i>top</i> of the checkbox area. The default orientation is <i>right</i>.  However, in a Grid Layout , the default label orientation is defined by the Grid Layout element.  But if a value of this Label Orientation property is specified, than it overrides the Label Orientation property provided by the Grid Layout. </td>
</tr>
<tr>
  <th class='referenceTh'>Label Style</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Choose from styles in the selected stylesheet at the toolbar, which defines the styling of the Label such as font color. Default is NONE.</td>
</tr>
<tr>
  <th class='referenceTh'>Remove Label Line</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Select this property's checkbox when the element is in a grid layout and its column span is equal to the grid layout's   number of columns. In other words, if the   field is the only field in that row, this empty line is removed above the element. </td>
</tr>
<tr>
  <th class='referenceTh'>Run Trigger</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'><p>The method assigned to this property is called whenever the value of the Checkbox changes (user clicks or unclicks the Checkbox). The method can be a User Action Method or a Script.</p>
    <p>The trigger of a field fires only if the field has first gained focus,  and then lost focus under these conditions:</p>
    <ul>
      <li>You focus on another field through either clicking your mouse or pressing the Tab key.</li>
      <li>You click a menu.</li>
      <li>You change your selection in a navigation tree.</li>
      <li>You click another tab of a tabset.<br>
        </li>
      </ul>
    <p><strong>Notes:</strong></p>
    <ul>
      <li>Field triggers do not fire on save. However, document triggers do.&nbsp;</li>
      <li>As long as the cursor is still inside the field, the trigger  does not fire. Clicking outside  the field into the layout will not trigger  the field as layouts are not focusable by default.</li>
      </ul></td>
</tr>
<tr>
<th class='referenceTh'>Show Label</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>This property determines whether the label is displayed on the Checkbox. Choose from <i>True</i> or <i>False</i>. Default is True which means that the label is displayed.</td>
</tr>
<tr>
<th class='referenceTh'>Start Row</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>Applicable only when the parent element is a Grid Layout. If true, the Checkbox appears in a new row of the grid. If <i>False</i>, it is simply placed in the next available cell. Default is <i>False, </i>which means that the Checkbox element does not appear on a new row.</td>
</tr>
<tr>
<th class='referenceTh'>Style</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>Choose from styles within the selected stylesheet (located in the Velocity Studio toolbar), which defines the styling of the button such as positioning and color. Default is none.</td>
</tr>
<tr>
<th class='referenceTh'>Toggle Edit</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>This property works in conjunction with the Editable property of the Table element to allow the user to be able to modified the value of this element on first click.  The  Editable property of the Table element  must be set to <em>True</em>. Setting this property to <em>False</em> will require that the user click the Checkbox field twice to change the value: 1) the first click enters in edit mode and 2) the second click changes the value.  Setting this property to <em>True</em>, allows the user to click the checkbox once to change the value. For information about setting configuring checkbox in an editable table, see Edit in Table in the <a href="../Metadata_Objects/Finder/Finder _Form_Result.html">Finder Result Form</a>.</td>
</tr>
<tr>
  <th class='referenceTh'>Tooltip</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Defines the tooltip text that is displayed in a hover box when the cursor hovers over the Button. Default is empty, which means that a tooltip has not been defined.  </td>
</tr>
<tr>
  <th class='referenceTh'>Tooltip Style</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Defines the tooltip style of the text displayed in the hover box when the cursor hovers over the <strong>Checkbox</strong> field. The default is empty. Click the <strong>Value</strong> field to select a tooltip style from the list.</td>
</tr>
<tr>
  <th class='referenceTh'>Tooltip Width (px)</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>Allows you to change the width of the tooltip popup window statically. Enter the width in pixels. The default value for this property is 0.</td>
</tr>
<tr>
  <th class='referenceTh'>Variable</th>
  <td class='referenceTd'>Optional</td>
  <td class='referenceTd'>This property can  be a  <em>String</em>, <em>Integer</em> or <em>Boolean</em> data type (for example, String values equal to <em>True</em>, <em>False</em>, <em>1</em> (one) or <em>0</em> (zero), Integer values equal to <em>1</em> (one) or <em>0</em> (zero), and Boolean values equal to <em>True</em> or <em>False)</em>. Use the property's <a href="Click Method and Variable Lookup.html">lookup button</a> to view property details.</td>
</tr>
<tr>
<th class='referenceTh'>Visible</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>Defines the user permissions assigned to this layout. Pre-defined system <a href="../Metadata_Objects/Permission/Permissions Velocity.html">Permissions</a> such as addPerm, deletePerm, editablePerm, attachPerm, executePerm, and visiblePerm can be assigned as well as Object Permissions. Defaults to NONE, which means no permissions assigned.</td>
</tr>
<tr>
<th class='referenceTh'>Width</th>
<td class='referenceTd'>Optional</td>
<td class='referenceTd'>Width to be taken up by the Button; can be in integer which is in pixels, or in percentage (for example, "50%") of page width or parent Element. If this element is nested under a Table element, the width and height properties can be set using either the percentage (%)  or pixel (px) measurement. If this element is not nested under a Table element, the width and height properties are only available using the pixel setting.</td>
</tr>
</tbody>
</table>

<h3>Notes</h3>

<p>If Checkbox is parented by a Grid Layout, the label orientation of the Checkbox follows Grid Layout's <b>Label Orientation</b> property, unless the Checkbox's Label Orientation property is specified.</p>

<p>If this element is nested under a Table element, the width and height properties can be set using either the percentage (%)  or pixel (px) measurement. If this element is not nested under a Table element, the width and height properties are only available using the pixel setting. </p> 

<p>Use the "Run Trigger" property to add a Method that will be triggered when the checkbox is toggled. For example, you can create validation rules for the Checkbox this way.</p>
<p>The Group By In Table property allows the values of an Element to be grouped by the value of the result of the Element in a Finder. If this value is set to True, then at runtime the user will have the ability to sort the results by the value of the field. The example below shows the Checkbox results grouped by True and False results when the user selects the &quot;Group by&quot; field menu option. </p>

<img src="exampleGroupByTableCheckbox.png" alt="Group By Example" border="1">

<p>*If this element is the first element that appears in the Element Tree pane, you can set the cell alignment. If this element has a parent layout, for example vlayout or hlayout with the width/height set, this element uses these values as a base to set its alignment. If the parent layout does not contain a width/height, then this element does not have a base to which it can set its alignment.
If the element has a parent that contains width/height settings, but this form is displayed under another layout with different widths, your form alignment is restricted to the parent's width/height settings.</p></td>
</tr>
</table>
</body>
</html>
