<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<title>Form Frame</title>
<link rel="StyleSheet" href="../../styles/site.css" type="text/css" />
<style type="text/css">.highlight { background: #FFFF40; }</style> 
<script type="text/javascript" src="../../highlight.js"></script></head>

<body onLoad="highlight();">
<table class="pagecontent" border="0" cellpadding="0" cellspacing="0" width="100%" bgcolor="#FFFFFF">
<tr>
<td valign="top" class="pagebody">
<h2>Form Frame</h2>

<p>Form Frame is a reference Element that displays a Form.</p>

<p>Form Frame is a special and important Element. Use Form Frame to include Document, Order, and Finder Forms, and other Forms of pre-built common UI objects such as Menus and Trees, to assemble your Web page, analogous to stitching UI widget components together. A Form Frame does not add any decoration to the user interface.</p>
<p>The following is an example of a Form Frame referencing a Document Form. Notice that the Form Frame itself, indeed, has no visible frame or border around the Form.</p>

<img src="exampleFFpreview.png" align="absmiddle" border="1" alt="Form Frame element" />
<h3>Summary</h3>
<table class='confluenceTable' border cellpadding=1>
<tbody>
<tr>
<td class='confluenceTd'>references Variable</td>
<td class='confluenceTd'>Yes</td>
</tr>
<tr>
<td class='confluenceTd'>references Method</td>
<td class='confluenceTd'>No</td>
</tr>
<tr>
<td class='confluenceTd'>references Form</td>
<td class='confluenceTd'>Yes</td>
</tr>
<tr>
<td class='confluenceTd'>Allowable Child Elements</td>
<td class='confluenceTd'><i>None</i></td>
</tr>
</tbody>
</table>

<p>The following table describes the properties of form frame element:</p>
<table class='confluenceTable' border cellpadding=1>
<tbody>
<tr>
  <th width="99" class='confluenceTh'>Property</th>
  <th width="143" class='confluenceTh'><a href="Form Elements Overview.htm#mandatoryProperty">Mandatory</a>/Optional</th>
  <th width="1371" class='confluenceTh'>Comment</th>
</tr>
<tr>
  <td class='confluenceTd'><strong>Name</strong></td>
  <td class='confluenceTd'>Mandatory</td>
  <td class='confluenceTd'>Name of the Form Frame.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>*Cell Alignment</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Controls the horizontal and vertical positioning of the Section Stack in the page or parent Element. Default is undefined, which behaves as if it is top-left.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Dynamic Height</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'><p>This property allows you to dynamically assign a variable or a script to the <strong>Dynamic Height</strong> property.  For a variable, the data type must be  either an integer or string. For the script, only the script action can be used and its return  type must be defined as either integer or string.</p>
<p> At runtime, by default, the regular  width and height are used. However, if <strong>Dynamic Width</strong> and <strong>Dynamic Height</strong> are defined, they replace the regular width and height, and the values are calculated based on either the variable or script.</p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Dynamic Style</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>This property allows you to set a dynamic style for a form frame element, which avoids multiple layers of layouts.</td>
</tr>
<tr>
<td class='confluenceTd'><strong>Dynamic Tooltip</strong></td>
<td class='confluenceTd'>Optional</td>
<td class='confluenceTd'><p>Defines a dynamic tooltip text that is displayed in a hover box when the cursor hovers the element.  Set property to a <em>String</em> variable or a script with a Return type <em>String</em>. The static Tooltip property is considered as default until the action returns a value.</p>
  <p>When this element is  used under the Table element, the <strong> Dynamic Tooltip</strong> property accepts a script, which is called for each result document value bound to a field with a dynamic tooltip set. This script returns the string desired to be shown on the hover. Additionally, the property accepts a variable value belonging to the result document. The value for this variable is then used to display the tooltip.</p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Dynamic Tooltip Style</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>This property dynamically changes the style of the Dynamic Tooltip.  Set property to a script with a Return type <em>String</em> that is a cascading style sheet (css) name found in the stylesheet used by the application.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Dynamic Width</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'><p>This property allows you to dynamically assign a variable or a script to the <strong>Dynamic Width</strong> property.  For a variable, the data type must be  either an integer or string. For the script, only the script action can be used and its return  type must be defined as either integer or string.</p>
    <p> At runtime, by default, the regular  width and height are used. However, if <strong>Dynamic Width</strong> and <strong>Dynamic Height</strong> are defined, they replace the regular width and height, and the values are calculated based on either the variable or script.</p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Error Icon Gap</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'><p>Select this property's checkbox to make a gap for the validation icon. By default, this property is false. </p>
    <p><strong>Note:</strong> This property is available only for left (or default) error orientation. The gap is calculated according to the /cwfv/error.png icon size. When the image is substituted with a smaller one, the gap is also smaller. </p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Error Icon Orientation</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>This property allows you to configure how an icon are displayed. This property takes the values left (default) and right.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>External URL</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Type the URL for the external site. Note, the Form Frame width and height must  be defined to implement this property. Form Frames with variables and form property settings cannot have an External URL.</td>
</tr>
<tr>
<td class='confluenceTd'><strong>Form</strong></td>
<td class='confluenceTd'>Optional</td>
<td class='confluenceTd'><p>Choose from a list of available forms that this form frame  presents. If the form frame is assigned to a Variable property, the choices are limited to thefForms of that Variable. If Variable property is not assigned, the choices are limited to forms in the current User Interface. </p>
  <p>Default is not assigned where no form is displayed. Alternatively, a local string variable can be used to dynamically change the form to be used at runtime. This string variable should have <em>only</em> the name of the form such as &quot;Default&quot;. Setting this property to a string variable automatically uses the user interface of the Variable property to look for the form if it is provided. Otherwise, it will use the current user interface for the form lookup. This property also allows you to specify a method that retuns a String.</p>
  <p><strong>Note:</strong> If metadata is migrated from different version 5.x releases and property is set to the <em>Form.Default</em>, the migration process will reset the value to <em>Default.</em></p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Height</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Height to be taken up by the Form Frame; can be in integer which is in pixels, or in percentage (for example,  "50%") of page height or parent Element.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Icon Height</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Height of the icon used or consumed within the element.  The value is defined as the number of pixels (integer) or percentage. The default value is 0.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Icon Tooltip</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Click the ellipsis button and specify a tooltip description within the <strong>Value</strong> field for the icon.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Icon Width</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Width of the icon used or consumed within the element.  The value is defined as the number of pixels (integer) or percentage. The default value is 0.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>On Enter</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>The system calls any script defined in this property. The onEnter property is only met if there is an input field (for example, a textfield, selectfield, and so on) that has focus when the <strong>Enter</strong> key is pressed. This onEnter property is invoked only if the input field does not have an OnEnter property set.  This feature can be used with multiple input fields, but only  one onEnter method to fire for all fields. </td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Overflow</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'><p>Defines how  overflow text is displayed based on the height and width of the Form Frame. Choose  from auto, hidden, or visible options in the toolbar. The auto option  displays text overflow as a child of the Form Frame. The default is NONE.</p>
    <p>See the <a href="#setFormFrameHeightDynamically">Set form frame height dynamically based on height</a> section for more details on this property and an example.</p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Remove Label Line</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Select this property's checkbox when the element is in a grid layout and its column span is equal to the grid layout's   number of columns. In other words, if the   field is the only field in that row, this empty line is removed above the element. </td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Show Resize Bar</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'><p>If true, a resize bar is created for the form frame that allows you to resize the form frame by dragging it, and show/hide layout by clicking it. The orientation of the resize bar for the form frame yields an up-and-down resize bar. The length of the resize bar is dictated by the width of the parent.  Specifically, it is the height if either the vertical layout parent or the width of the horizontal layout parent that determines the resize bar's length. Default is <i>default</i>, which does not show the resize bar.</p></td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Style</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Choose from styles in the selected stylesheet at the toolbar, which defines the styling of the Form Frame such as color and font. Default is NONE.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Tooltip</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Defines the tooltip text, which is displayed in a hover box when the cursor hovers over the Form Frame. Default is empty, which means no tooltip for the Form Frame.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Tooltip Style</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Defines the tooltip style of the text displayed in the hover box when the cursor hovers over the form frame. The default is empty. Click the <strong>Value</strong> field to select a tooltip style from the list.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Tooltip Width (px)</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Allows you to change the width of the tooltip popup window statically. Enter the width in pixels. The default value for this property is 0.</td>
</tr>
<tr>
  <td class='confluenceTd'><strong>Unmanaged</strong></td>
  <td class='confluenceTd'>Optional</td>
  <td class='confluenceTd'>Specifies whether the Form Frame is displayed under a dialog element.  The default is set to false. </td>
</tr>
<tr>
<td class='confluenceTd'><strong>Visible</strong></td>
<td class='confluenceTd'>Optional</td>
<td class='confluenceTd'>Determines whether the Form Frame is visible or not. Defaults to NONE, which means visible.</td>
</tr>
<tr>
<td class='confluenceTd'><strong>Variable</strong></td>
<td class='confluenceTd'>Optional</td>
<td class='confluenceTd'><p>Choose from the list of Variables of type <em>User Interface</em> in the current User Interface to bind to this Form Frame. Once a Variable is chosen, you can choose a Form to present the Variable in the Form property. If Form property is not selected with a chosen Variable, the Form with name <i>Default</i> (that is,  <i>&lt;Variable's data type&gt;.UserInterface.Form.Default</i>) is assumed. Default is not assigned.</p>
  <p>You can also specify a method retuning either a UserInterface or any   particular UI. The <strong>Form</strong> drop-down list is then populated according to the return   type of the method.</p>
 
  <p>Use the property's <a href="Click Method and Variable Lookup.html">lookup button</a> to view property details.<BR>
  </p></td>
</tr>
<tr>
<td class='confluenceTd'><strong>Width</strong></td>
<td class='confluenceTd'>Optional</td>
<td class='confluenceTd'>Width to be taken up by the Form Frame; can be in integer which is in pixels, or in percentage (for example, "30%") of page width or parent Element.</td>
</tr>
</tbody>
</table>

<h3><a name="Notes"></a>Notes:</h3>

<p>The <b>Form</b> property is the most significant property in a Form Frame, which defines which Form to display. You may display a Form that is contained within the current User Interface, or a Form that is outside the current User Interface.</p>

<ul>
<li>To display a Form of the same User Interface, simply choose that Form in the <b>Form</b> property. Because the Form Frame and the chosen Form are in same User Interface, they share, and thus have access to, the same Variables and Methods in the User Interface.</li>
<li>To display a Form outside the User Interface, you must first add the target Form's User Interface as a Variable of the current User Interface. 
<p><img src="FFvariableUI.png" align="absmiddle" border="1" alt="Form Frame Variable of User Interface"></p>
Then assign that Variable to the Form Frame's <b>Variable</b> property, and assign the target Form to Form Frame's <b>Form</b> property.</li>
</ul>

<p>The field elements of the Form in the Form Frame may be binded to Variables. At preview time, the value of these variables are null. At runtime, the assignment of these Variables will be reflected in the rendered page.</p>

<p><table class='confluenceTable' >
<tbody>
<tr>
<th class='confluenceTh'>Form Frame at preview time</th>
<th class='confluenceTh'>Form Frame at runtime</th>
</tr>
<tr>
<td class='confluenceTd'><img src="exampleFFpreview.png" align="absmiddle" border="0" alt="Form Frame at preview time"></td>
<td class='confluenceTd' align='center'><img src="exampleFFruntime.png" align="absmiddle" border="0" alt="Form Frame at runtime"></td>
</tr>
</tbody>
</table></p>

<p>At runtime, if the referenced Form is located outside the User Interface, the Form cannot be rendered (and thus does not show up) without instantiation of the <i>User Interface</i> Variable that is added to your User Interface. (Note: that Variable is null by default.) For example, if the <i>User Interface</i> Variable is setup as per above screen shot, you may instantiate the Variable by script </p>

<div class="code"><div class="codeContent">
<pre class="code-java">
this.handsetUI = new nsFF.handset.UserInterface(null, this);
</pre></div>
</div>

<p>at the Variable's Initialization method. The Form Frame would then appear at runtime. To populate any data to the Form, assign values to the corresponding Variables under the <i>User Interface</i> Variable. In our illustration, an example of the assignment statement may be:</p>

<div class="code"><div class="codeContent">
<pre class="code-java">
this.handsetUI.model.name = "iPhone 3G";
</pre></div>
</div>
</p>

<p>See <a href="Scripting in Velocity Studio.htm#UIcascade">cascading User Interface objects</a> in Scripting for details.</p>
<p>*If this element is the first element that appears in the Element Tree pane, you can set the cell alignment. If this element has a parent layout, for example vlayout or hlayout with the width/height set, this element uses these values as a base to set its alignment. If the parent layout does not contain a width/height, then this element does not have a base to which it can set its alignment.
If the element has a parent that contains width/height settings, but this form is displayed under another layout with different widths, your form alignment is restricted to the parent's width/height settings.</p>

<h4><a name="setFormFrameHeightDynamically"></a>Set Form Frame's Height Dynamically Based on Content</h4>
<p>The form frame is automatically expanded based on the size of its content when the <strong>Overflow</strong> property is set to <strong>DEFAULT</strong>. To automatically expand it to at least one level of children in this form frame, the size must be defined. Otherwise, the form frame does not know how much to expand by.</p>
<p>As an example, if the form frame contains a tree element and you want to automatically expand it based on the number of records in the tree, set the <a href="Element - Tree.html">tree element</a>'s <strong>Auto Fit Data</strong> property to be <strong>Vertical</strong>.<br>
  <br>
  <br>
</p></td>
</tr>
</table>
</body>
</html>
